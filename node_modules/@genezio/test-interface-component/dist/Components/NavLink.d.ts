declare const StyledNavLink: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<import('react-router-dom').NavLinkProps & import('react').RefAttributes<HTMLAnchorElement>, "ref"> & {
    ref?: ((instance: HTMLAnchorElement | null) => void | import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import('react').RefObject<HTMLAnchorElement> | null | undefined;
}, {
    isActive: boolean;
    grey?: boolean;
}>> & string & Omit<import('react').ForwardRefExoticComponent<import('react-router-dom').NavLinkProps & import('react').RefAttributes<HTMLAnchorElement>>, keyof import('react').Component<any, {}, any>>;
export default StyledNavLink;
//# sourceMappingURL=NavLink.d.ts.map