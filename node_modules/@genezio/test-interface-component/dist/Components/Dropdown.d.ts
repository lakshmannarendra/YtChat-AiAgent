import * as RadixDropdown from "@radix-ui/react-dropdown-menu";
interface ItemProps {
    variant?: "default" | "danger";
    disabled?: boolean;
}
declare const Dropdown: {
    Menu: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components').FastOmit<RadixDropdown.DropdownMenuProps, never>> & string & Omit<import('react').FC<RadixDropdown.DropdownMenuProps>, keyof import('react').Component<any, {}, any>>;
    Trigger: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components').FastOmit<Omit<RadixDropdown.DropdownMenuTriggerProps & import('react').RefAttributes<HTMLButtonElement>, "ref"> & {
        ref?: ((instance: HTMLButtonElement | null) => void | import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import('react').RefObject<HTMLButtonElement> | null | undefined;
    }, never>> & string & Omit<import('react').ForwardRefExoticComponent<RadixDropdown.DropdownMenuTriggerProps & import('react').RefAttributes<HTMLButtonElement>>, keyof import('react').Component<any, {}, any>>;
    Content: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components').FastOmit<Omit<RadixDropdown.DropdownMenuContentProps & import('react').RefAttributes<HTMLDivElement>, "ref"> & {
        ref?: ((instance: HTMLDivElement | null) => void | import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import('react').RefObject<HTMLDivElement> | null | undefined;
    }, never>> & string & Omit<import('react').ForwardRefExoticComponent<RadixDropdown.DropdownMenuContentProps & import('react').RefAttributes<HTMLDivElement>>, keyof import('react').Component<any, {}, any>>;
    Item: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<RadixDropdown.DropdownMenuItemProps & import('react').RefAttributes<HTMLDivElement>, "ref"> & {
        ref?: ((instance: HTMLDivElement | null) => void | import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import('react').DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import('react').RefObject<HTMLDivElement> | null | undefined;
    }, ItemProps>> & string & Omit<import('react').ForwardRefExoticComponent<RadixDropdown.DropdownMenuItemProps & import('react').RefAttributes<HTMLDivElement>>, keyof import('react').Component<any, {}, any>>;
    Portal: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components').FastOmit<RadixDropdown.DropdownMenuPortalProps, never>> & string & Omit<import('react').FC<RadixDropdown.DropdownMenuPortalProps>, keyof import('react').Component<any, {}, any>>;
};
export default Dropdown;
//# sourceMappingURL=Dropdown.d.ts.map