import yaml from "yaml";
/**
 * Used to preserve comments and key order.
 */
export type YAMLContext = {
    document: yaml.Document.Parsed;
    indent: number;
};
/**
 * Parses the given YAML content and returns the parsed YAML object along with
 * the YAML context.The context is used to preserve comments and key order.
 *
 * @param yamlContent The YAML content to parse.
 * @returns A tuple containing the parsed YAML object and the YAML context.
 *
 * @throws {Error} If the YAML content contains syntax errors.
 */
export declare function parse(yamlContent: string): [unknown, YAMLContext];
/**
 * Converts an updated YAML object into a string representation using the
 * previously generated context. The context is used to preserve comments and
 * key order.
 *
 * @param updatedYaml - The updated YAML object.
 * @param context - The YAML context.
 * @returns The string representation of the updated YAML.
 */
export declare function stringify(updatedYaml: unknown, context: YAMLContext | undefined, options?: yaml.ToStringOptions): string;
/**
 * Merges an array of YAML contexts into a single YAML context.
 *
 * @param contexts - An array of YAML contexts to merge.
 * @returns The merged YAML context, or `undefined` if the input array is empty.
 */
export declare function mergeContexts(contexts: Array<YAMLContext>): YAMLContext | undefined;
